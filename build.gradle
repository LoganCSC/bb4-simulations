//  Copyright by Barry G. Becker, 2013. Licensed under MIT License: http://www.opensource.org/licenses/MIT

description = 'A collection of java simulations.'
group = 'com.barrybecker4'
version = '1.1.2-SNAPSHOT'

apply from: 'https://raw.github.com/barrybecker4/bb4-common/master/bb4.gradle'

project.archivesBaseName = 'bb4-simulation'
mainClassName = "com.barrybecker4.simulation.dice.DiceSimulator"


task runDice(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["com.barrybecker4.simulation.dice.DiceSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

// this version uses the main method instead of the framework.
task runDice2(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.dice.DiceSimulator'
    classpath = sourceSets.main.runtimeClasspath
}

task runFluid(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["com.barrybecker4.simulation.fluid.ui.FluidSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runSnake(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["com.barrybecker4.simulation.snake.SnakeSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runReactionDiffusion(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["com.barrybecker4.simulation.reactiondiffusion.RDSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runFractalExplorer(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["com.barrybecker4.simulation.fractalexplorer.FractalExplorer"]
    classpath = sourceSets.main.runtimeClasspath
}

task runHenonPhaseExplorer(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["com.barrybecker4.simulation.henonphase.HenonPhaseExplorer"]
    classpath = sourceSets.main.runtimeClasspath
}

task runLSystemExplorer(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["com.barrybecker4.simulation.lsystem.LSystemExplorer"]
    classpath = sourceSets.main.runtimeClasspath
}

task runLiquid(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["com.barrybecker4.simulation.liquid.LiquidSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runTrebuchet(type: JavaExec, depends: classes) {
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["com.barrybecker4.simulation.trebuchet.TrebuchetSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

dependencies {
   compile 'com.barrybecker4:bb4-sound:1.1.2-SNAPSHOT'
   compile 'com.barrybecker4:bb4-optimization:1.1.2-SNAPSHOT'
}

task simulationJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/common/**'
    include 'com/barrybecker4/simulation/graphing/**'
    baseName = 'bb4-simulation'
    manifest {
        attributes 'Implementation-Title': 'Simulation common code',
            'Implementation-Version': version,
            provider: 'gradle',
            'Main-Class': mainClassName
    }
}

task diceJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/dice/**'
    baseName = 'bb4-dice'
}
task fluidJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/fluid/**'
    baseName = 'bb4-fluid'
}
task fractalexplorerJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/fractalexplorer/**'
    baseName = 'bb4-fractalexplorer'
}
task habitatJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/habitat/**'
    baseName = 'bb4-habitat'
}
task henonexplorerJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/henonphase/**'
    baseName = 'bb4-henonexplorer'
}
task liquidJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/liquid/**'
    baseName = 'bb4-liquid'
}
task lsystemJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/lsystem/**'
    baseName = 'bb4-lsystem'
}
task predpreyJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/predprey/**'
    baseName = 'bb4-predprey'
}
task reactiondiffusionJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/reactiondiffusion/**'
    baseName = 'bb4-reactiondiffusion'
}
task snakeJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/snake/**'
    baseName = 'bb4-snake'
}
task stockJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/stock/**'
    baseName = 'bb4-stock'
}
task trebuchetJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/trebuchet/**'
    baseName = 'bb4-trebuchet'
}
task verhulstJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/simulation/verhulst/**'
    baseName = 'bb4-verhulst'
}

artifacts {
    archives simulationJar
    archives diceJar
    archives fluidJar
    archives fractalexplorerJar
    archives habitatJar
    archives henonexplorerJar
    archives liquidJar
    archives lsystemJar
    archives predpreyJar
    archives reactiondiffusionJar
    archives snakeJar
    archives stockJar
    archives trebuchetJar
    archives verhulstJar

    archives sourcesJar
    archives javadocJar
}

jar {
    // skip building the default jar that contains everything
    enabled = false
}

uploadArchives {
    repositories {
        mavenDeployer {
            // Maven does allow more than one jar per pom file. Filter is used to make many artifacts.
            // There may be a better way to do this. See
            //http://stackoverflow.com/questions/7826652/how-to-upload-an-existing-collection-of-3rd-party-jars-to-a-maven-server-in-grad
            //http://www.gradle.org/docs/current/userguide/userguide_single.html#sub:multiple_artifacts_per_project

            addFilter('bb4-simulation') {artifact, file ->
                artifact.name == 'bb4-simulation'
            }
            addFilter('bb4-dice') {artifact, file ->
                artifact.name == 'bb4-dice'
            }
            addFilter('bb4-fluid') {artifact, file ->
                artifact.name == 'bb4-fluid'
            }
            addFilter('bb4-fractalexplorer') {artifact, file ->
                artifact.name == 'bb4-fractalexplorer'
            }
            addFilter('bb4-habitat') {artifact, file ->
                artifact.name == 'bb4-habitat'
            }
            addFilter('bb4-henonexplorer') {artifact, file ->
                artifact.name == 'bb4-henonexplorer'
            }
            addFilter('bb4-liquid') {artifact, file ->
                artifact.name == 'bb4-liquid'
            }
            addFilter('bb4-lsystem') {artifact, file ->
                artifact.name == 'bb4-lsystem'
            }
            addFilter('bb4-predprey') {artifact, file ->
                artifact.name == 'bb4-predprey'
            }
            addFilter('bb4-reactiondiffusion') {artifact, file ->
                artifact.name == 'bb4-reactiondiffusion'
            }
            addFilter('bb4-snake') {artifact, file ->
                artifact.name == 'bb4-snake'
            }
            addFilter('bb4-stock') {artifact, file ->
                artifact.name == 'bb4-stock'
            }
            addFilter('bb4-trebuchet') {artifact, file ->
                artifact.name == 'bb4-trebuchet'
            }
			addFilter('bb4-verhulst') {artifact, file ->
                artifact.name == 'bb4-verhulst'
            }
        }
    }
}
